# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: gitwize-lambda
# app and org for use with dashboard.serverless.com
#app: gitwize
#org: wizeline

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
# frameworkVersion: "=X.X.X"
frameworkVersion: '>=1.28.0 <2.0.0'

provider:
  name: aws
  runtime: go1.x

# you can overwrite defaults here
  stage: ${opt:stage, 'dev'}
  region: ap-southeast-1

# you can add statements to the Lambda function's IAM Role here
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "rds:*"
      Resource: "*"
    - Effect: "Allow"
      Action:
        - "lambda:InvokeFunction"
      Resource: "*"

# you can define service wide environment variables here
#  environment:
#    variable1: value1

package:
  exclude:
    - ./**
  include:
    - ./bin/**

functions:
  update_one_repo:
    handler: bin/update_one_repo
    layers:
      - arn:aws:lambda:${self:provider.region}:863257328258:layer:mysql_8_0_18_layer:1
      - arn:aws:lambda:${self:provider.region}:553035198032:layer:git-lambda2:6
    memorySize: 1024
    timeout: 900
    environment:
      DB_CONN_STRING: ${env:DB_CONN_STRING}
      USE_DEFAULT_API_TOKEN: "TRUE"
      DEFAULT_GITHUB_TOKEN: ${env:DEFAULT_GITHUB_TOKEN}
      CYPHER_PASS_PHASE: ${env:CYPHER_PASS_PHASE}
      APP_STAGE: ${opt:stage}

  load_full_one_repo:
    handler: bin/load_full_one_repo
    layers:
      - arn:aws:lambda:${self:provider.region}:863257328258:layer:mysql_8_0_18_layer:1
      - arn:aws:lambda:${self:provider.region}:553035198032:layer:git-lambda2:6
    memorySize: 2048
    timeout: 900
    environment:
      DB_CONN_STRING: ${env:DB_CONN_STRING}
      USE_DEFAULT_API_TOKEN: "TRUE"
      DEFAULT_GITHUB_TOKEN: ${env:DEFAULT_GITHUB_TOKEN}
      CYPHER_PASS_PHASE: ${env:CYPHER_PASS_PHASE}
      APP_STAGE: ${opt:stage}

  update_all_repos:
    handler: bin/update_all_repos
    layers:
      - arn:aws:lambda:${self:provider.region}:863257328258:layer:mysql_8_0_18_layer:1
      - arn:aws:lambda:${self:provider.region}:553035198032:layer:git-lambda2:6
    memorySize: 1024
    timeout: 900
    environment:
      DB_CONN_STRING: ${env:DB_CONN_STRING}
      USE_DEFAULT_API_TOKEN: "TRUE"
      DEFAULT_GITHUB_TOKEN: ${env:DEFAULT_GITHUB_TOKEN}
      CYPHER_PASS_PHASE: ${env:CYPHER_PASS_PHASE}
      APP_STAGE: ${opt:stage}
    events:
      - schedule: "cron(0 0/8 * * ? *)"

  load_metrics:
    handler: bin/load_metrics
    layers:
      - arn:aws:lambda:${self:provider.region}:863257328258:layer:mysql_8_0_18_layer:1
      - arn:aws:lambda:${self:provider.region}:553035198032:layer:git-lambda2:6
    memorySize: 1024
    timeout: 900
    environment:
      DB_CONN_STRING: ${env:DB_CONN_STRING}
      APP_STAGE: ${opt:stage}
    events:
      - schedule: "cron(20 0/8 * * ? *)"

  git_native_example:
    handler: bin/git_native_example
    memorySize: 128
    timeout: 60
    environment:
      USE_DEFAULT_API_TOKEN: "TRUE"
      DEFAULT_GITHUB_TOKEN: ${env:DEFAULT_GITHUB_TOKEN}
      CYPHER_PASS_PHASE: ${env:CYPHER_PASS_PHASE}
      APP_STAGE: ${opt:stage}
    layers:
      - arn:aws:lambda:${self:provider.region}:553035198032:layer:git-lambda2:6
